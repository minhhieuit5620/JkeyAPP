<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JKeyApp</name>
    </assembly>
    <members>
        <member name="F:JKeyApp.Models.ErrorCode.Success">
            <summary>
            successfully
            </summary>
        </member>
        <member name="F:JKeyApp.Models.ErrorCode.UserInvalid">
            <summary>
            some error from user, ex: field empty,error syntax
            </summary>
        </member>
        <member name="F:JKeyApp.Models.ErrorCode.Exception">
            <summary>
            system have exception
            </summary>
        </member>
        <member name="F:JKeyApp.Models.ErrorCode.InvalidOTP">
            <summary>
            Invalid OTP verify
            </summary>
        </member>
        <member name="M:JKeyApp.ScanQR.sendOTP(JKeyApp.Models.GenerateOTPModel)">
            <summary>
            send OTP to user for verify device
            </summary>
            <param name="modelFirstOTP"></param>
            <returns>success => true/ failed=> false</returns>
        </member>
        <member name="M:JKeyApp.ScanQR.CameraBarcodeReaderView_BarcodeDetected(System.Object,ZXing.Net.Maui.BarcodeDetectionEventArgs)">
            <summary>
            Loading camera first time 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:JKeyApp.ScanQRAdvanced.sendOTP(JKeyApp.Models.GenerateOTPModel)">
            <summary>
            send OTP to user for verify device
            </summary>
            <param name="modelFirstOTP"></param>
            <returns>success => true/ failed=> false</returns>
        </member>
        <member name="M:JKeyApp.Services.DeviceService.GetAllAuthenTypeInDevice(JKeyApp.Models.GetAuthenTypeRequest)">
            <summary>
            get all authen type from device user
            </summary>
            <param name="getAuthenTypeRequest"></param>
            <returns></returns>
        </member>
        <member name="M:JKeyApp.Services.DeviceService.RegisterDevice(JKeyApp.Models.DeviceUser)">
            <summary>
            register device user 
            </summary>
            <param name="deviceUser"></param>
            <returns></returns>
        </member>
        <member name="M:JKeyApp.Services.DeviceService.UnRegisterDevice(JKeyApp.Models.DeviceUser)">
            <summary>
            unregister device user 
            when user registed user can unregis device 
            </summary>
            <param name="deviceUser"></param>
            <returns></returns>
        </member>
        <member name="M:JKeyApp.Services.DeviceService.OTPFirstRegist(JKeyApp.Models.GenerateOTPModel)">
            <summary>
            send OTP to email at time register
            when user register, system will send an email have OTP code
            </summary>
            <param name="deviceUser"></param>
            <returns></returns>
        </member>
        <member name="M:JKeyApp.Services.DeviceService.VerifyOTPFirstRegist(JKeyApp.Models.AuthenModel)">
            <summary>
            Verify OTP first register device user 
            Verify OTP system sent to email customer to verify email
            </summary>
            <param name="deviceUser"></param>
            <returns></returns>
        </member>
        <member name="M:JKeyApp.Services.IKeyProvider.ComputeHmac(JKeyApp.Services.OtpHashMode,System.Byte[])">
            <summary>
            Uses the key to get an HMAC using the specified algorithm and data
            </summary>
            <remarks>
            This is a much better API than the previous API which would briefly expose the key for all derived types.
            
            Now a derived type could be bound to an HSM/smart card/etc if required and a lot of the security limitations
            of in app/memory exposure of the key can be eliminated.
            </remarks>
            <param name="mode">The HMAC algorithm to use</param>
            <param name="data">The data used to compute the HMAC</param>
            <returns>HMAC of the key and data</returns>
        </member>
        <member name="M:JKeyApp.Services.InMemoryKey.#ctor(System.Byte[])">
            <summary>
            Creates an instance of a key.
            </summary>
            <param name="key">Plaintext key data</param>
        </member>
        <member name="M:JKeyApp.Services.InMemoryKey.GetCopyOfKey">
            <summary>
            Gets a copy of the plaintext key
            </summary>
            <remarks>
            This is internal rather than protected so that the tests can use this method
            </remarks>
            <returns>Plaintext Key</returns>
        </member>
        <member name="M:JKeyApp.Services.InMemoryKey.ComputeHmac(JKeyApp.Services.OtpHashMode,System.Byte[])">
            <summary>
            Uses the key to get an HMAC using the specified algorithm and data
            </summary>
            <param name="mode">The HMAC algorithm to use</param>
            <param name="data">The data used to compute the HMAC</param>
            <returns>HMAC of the key and data</returns>
        </member>
        <member name="M:JKeyApp.Services.InMemoryKey.CreateHmacHash(JKeyApp.Services.OtpHashMode)">
            <summary>
            Create an HMAC object for the specified algorithm
            </summary>
        </member>
        <member name="M:JKeyApp.Services.KeyUtilities.Destroy(System.Byte[])">
            <summary>
            Overwrite potentially sensitive data with random junk
            </summary>
            <remarks>
            Warning!
            
            This isn't foolproof by any means.  The garbage collector could have moved the actual
            location in memory to another location during a collection cycle and left the old data in place
            simply marking it as available.  We can't control this or even detect it.
            This method is simply a good faith effort to limit the exposure of sensitive data in memory as much as possible
            </remarks>
        </member>
        <member name="M:JKeyApp.Services.KeyUtilities.GetBigEndianBytes(System.Int64)">
            <summary>
            converts a long into a big endian byte array.
            </summary>
            <remarks>
            RFC 4226 specifies big endian as the method for converting the counter to data to hash.
            </remarks>
        </member>
        <member name="M:JKeyApp.Services.KeyUtilities.GetBigEndianBytes(System.Int32)">
            <summary>
            converts an int into a big endian byte array.
            </summary>
            <remarks>
            RFC 4226 specifies big endian as the method for converting the counter to data to hash.
            </remarks>
        </member>
        <member name="F:JKeyApp.Services.Otp.secretKey">
            <summary>
            Secret key
            </summary>
        </member>
        <member name="F:JKeyApp.Services.Otp.hashMode">
            <summary>
            The hash mode to use
            </summary>
        </member>
        <member name="M:JKeyApp.Services.Otp.#ctor(System.Byte[],JKeyApp.Services.OtpHashMode)">
            <summary>
            Constructor for the abstract class using an explicit secret key
            </summary>
            <param name="secretKey"></param>
            <param name="mode">The hash mode to use</param>
        </member>
        <member name="M:JKeyApp.Services.Otp.#ctor(JKeyApp.Services.IKeyProvider,JKeyApp.Services.OtpHashMode)">
            <summary>
            Constructor for the abstract class using a generic key provider
            </summary>
            <param name="key"></param>
            <param name="mode">The hash mode to use</param>
        </member>
        <member name="M:JKeyApp.Services.Otp.Compute(System.Int64,JKeyApp.Services.OtpHashMode)">
            <summary>
            An abstract definition of a compute method.  Takes a counter and runs it through the derived algorithm.
            </summary>
            <param name="counter">Counter or step</param>
            <param name="mode">The hash mode to use</param>
            <returns>OTP calculated code</returns>
        </member>
        <member name="M:JKeyApp.Services.Otp.CalculateOtp(System.Byte[],JKeyApp.Services.OtpHashMode)">
            <summary>
            Helper method that calculates OTPs
            </summary>
        </member>
        <member name="M:JKeyApp.Services.Otp.Digits(System.Int64,System.Int32)">
            <summary>
            truncates a number down to the specified number of digits
            </summary>
        </member>
        <member name="M:JKeyApp.Services.Otp.Verify(System.Int64,System.String,System.Int64@,JKeyApp.Services.VerificationWindow)">
            <summary>
            Verify an OTP value
            </summary>
            <param name="initialStep">The initial step to try</param>
            <param name="valueToVerify">The value to verify</param>
            <param name="matchedStep">Output parameter that provides the step where the match was found.  If no match was found it will be 0</param>
            <param name="window">The window to verify</param>
            <returns>True if a match is found</returns>
        </member>
        <member name="F:JKeyApp.Services.OtpHashMode.Sha1">
            <summary>
            Sha1 is used as the HMAC hashing algorithm
            </summary>
        </member>
        <member name="F:JKeyApp.Services.OtpHashMode.Sha256">
            <summary>
            Sha256 is used as the HMAC hashing algorithm
            </summary>
        </member>
        <member name="F:JKeyApp.Services.OtpHashMode.Sha512">
            <summary>
            Sha512 is used as the HMAC hashing algorithm
            </summary>
        </member>
        <member name="F:JKeyApp.Services.TimeCorrection.UncorrectedInstance">
            <summary>
            An instance that provides no correction factor
            </summary>
        </member>
        <member name="M:JKeyApp.Services.TimeCorrection.#ctor">
            <summary>
            Constructor used solely for the UncorrectedInstance static field to provide an instance without a correction factor.
            </summary>
        </member>
        <member name="M:JKeyApp.Services.TimeCorrection.#ctor(System.DateTime)">
            <summary>
            Creates a corrected time object by providing the known correct current UTC time.  The current system UTC time will be used as the reference
            </summary>
            <remarks>
            This overload assumes UTC.  If a base and reference time other than UTC are required then use the other overlaod.
            </remarks>
            <param name="correctUtc">The current correct UTC time</param>
        </member>
        <member name="M:JKeyApp.Services.TimeCorrection.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Creates a corrected time object by providing the known correct current time and the current reference time that needs correction
            </summary>
            <param name="correctTime">The current correct time</param>
            <param name="referenceTime">The current reference time (time that will have the correction factor applied in subsequent calls)</param>
        </member>
        <member name="M:JKeyApp.Services.TimeCorrection.GetCorrectedTime(System.DateTime)">
            <summary>
            Applies the correction factor to the reference time and returns a corrected time
            </summary>
            <param name="referenceTime">The reference time</param>
            <returns>The reference time with the correction factor applied</returns>
        </member>
        <member name="P:JKeyApp.Services.TimeCorrection.CorrectedUtcNow">
            <summary>
            Applies the correction factor to the current system UTC time and returns a corrected time
            </summary>
        </member>
        <member name="P:JKeyApp.Services.TimeCorrection.CorrectionFactor">
            <summary>
            The timespan that is used to calculate a corrected time
            </summary>
        </member>
        <member name="F:JKeyApp.Services.Totp.unixEpochTicks">
            <summary>
            The number of ticks as Measured at Midnight Jan 1st 1970;
            </summary>
        </member>
        <member name="F:JKeyApp.Services.Totp.ticksToSeconds">
            <summary>
            A divisor for converting ticks to seconds
            </summary>
        </member>
        <member name="M:JKeyApp.Services.Totp.#ctor(System.Byte[],System.Int32,JKeyApp.Services.OtpHashMode,System.Int32,JKeyApp.Services.TimeCorrection)">
            <summary>
            Create a TOTP instance
            </summary>
            <param name="secretKey">The secret key to use in TOTP calculations</param>
            <param name="step">The time window step amount to use in calculating time windows.  The default is 30 as recommended in the RFC</param>
            <param name="mode">The hash mode to use</param>
            <param name="totpSize">The number of digits that the returning TOTP should have.  The default is 6.</param>
            <param name="timeCorrection">If required, a time correction can be specified to compensate of an out of sync local clock</param>
        </member>
        <member name="M:JKeyApp.Services.Totp.#ctor(JKeyApp.Services.IKeyProvider,System.Int32,JKeyApp.Services.OtpHashMode,System.Int32,JKeyApp.Services.TimeCorrection)">
            <summary>
            Create a TOTP instance
            </summary>
            <param name="key">The secret key to use in TOTP calculations</param>
            <param name="step">The time window step amount to use in calculating time windows.  The default is 30 as recommended in the RFC</param>
            <param name="mode">The hash mode to use</param>
            <param name="totpSize">The number of digits that the returning TOTP should have.  The default is 6.</param>
            <param name="timeCorrection">If required, a time correction can be specified to compensate of an out of sync local clock</param>
        </member>
        <member name="M:JKeyApp.Services.Totp.ComputeTotp(System.DateTime)">
            <summary>
            Takes a timestamp and applies correction (if provided) and then computes a TOTP value
            </summary>
            <param name="timestamp">The timestamp to use for the TOTP calculation</param>
            <returns>a TOTP value</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.ComputeTotp">
            <summary>
            Takes a timestamp and computes a TOTP value for corrected UTC now
            </summary>
            <remarks>
            It will be corrected against a corrected UTC time using the provided time correction.  If none was provided then simply the current UTC will be used.
            </remarks>
            <returns>a TOTP value</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.VerifyTotp(System.String,System.Int64@,JKeyApp.Services.VerificationWindow)">
            <summary>
            Verify a value that has been provided with the calculated value.
            </summary>
            <remarks>
            It will be corrected against a corrected UTC time using the provided time correction.  If none was provided then simply the current UTC will be used.
            </remarks>
            <param name="totp">the trial TOTP value</param>
            <param name="timeStepMatched">
            This is an output parameter that gives that time step that was used to find a match.
            This is useful in cases where a TOTP value should only be used once.  This value is a unique identifier of the
            time step (not the value) that can be used to prevent the same step from being used multiple times
            </param>
            <param name="window">The window of steps to verify</param>
            <returns>True if there is a match.</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.VerifyTotp(System.DateTime,System.String,System.Int64@,JKeyApp.Services.VerificationWindow)">
            <summary>
            Verify a value that has been provided with the calculated value
            </summary>
            <param name="timestamp">The timestamp to use</param>
            <param name="totp">the trial TOTP value</param>
            <param name="timeStepMatched">
            This is an output parameter that gives that time step that was used to find a match.
            This is usefule in cases where a TOTP value should only be used once.  This value is a unique identifier of the
            time step (not the value) that can be used to prevent the same step from being used multiple times
            </param>
            <param name="window">The window of steps to verify</param>
            <returns>True if there is a match.</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.CalculateTimeStepFromTimestamp(System.DateTime)">
            <summary>
            Takes a timestamp and calculates a time step
            </summary>
        </member>
        <member name="M:JKeyApp.Services.Totp.RemainingSeconds">
            <summary>
            Remaining seconds in current window based on UtcNow
            </summary>
            <remarks>
            It will be corrected against a corrected UTC time using the provided time correction.  If none was provided then simply the current UTC will be used.
            </remarks>
            <returns>Number of remaining seconds</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.RemainingSeconds(System.DateTime)">
            <summary>
            Remaining seconds in current window
            </summary>
            <param name="timestamp">The timestamp</param>
            <returns>Number of remaining seconds</returns>
        </member>
        <member name="M:JKeyApp.Services.Totp.Compute(System.Int64,JKeyApp.Services.OtpHashMode)">
            <summary>
            Takes a time step and computes a TOTP code
            </summary>
            <param name="counter">time step</param>
            <param name="mode">The hash mode to use</param>
            <returns>TOTP calculated code</returns>
        </member>
        <member name="M:JKeyApp.Services.VerificationWindow.#ctor(System.Int32,System.Int32)">
            <summary>
            Create an instance of a verification window
            </summary>
            <param name="previous">The number of previous frames to accept</param>
            <param name="future">The number of future frames to accept</param>
        </member>
        <member name="M:JKeyApp.Services.VerificationWindow.ValidationCandidates(System.Int64)">
            <summary>
            Gets an enumberable of all the possible validation candidates
            </summary>
            <param name="initialFrame">The initial frame to validate</param>
            <returns>Enumberable of all possible frames that need to be validated</returns>
        </member>
        <member name="F:JKeyApp.Services.VerificationWindow.RfcSpecifiedNetworkDelay">
            <summary>
            The verification window that accomodates network delay that is recommended in the RFC
            </summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.OpenEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.openEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.OffEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.offEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.DisplayOtpAdvanced">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.displayOtpAdvanced"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.DisableTranId">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.disableTranId"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.EnableBtnTranId">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.enableBtnTranId"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.Otp">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.otp"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.OtpCode">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.otpCode"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.TranId">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.tranId"/>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.Time">
            <inheritdoc cref="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.time"/>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.copyOtpCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.CopyOtpCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.CopyOtpCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.CopyOtp"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.genAdvancedOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenAdvancedOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenAdvancedOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenAdvancedOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.registerCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.RegisterCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.RegisterCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.Register"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.scanQRCodeCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.ScanQRCodeCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.ScanQRCodeCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.ScanQRCode"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.unRegisterCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.UnRegisterCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.UnRegisterCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.UnRegister"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.genOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.GenOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.AdvancedOTPPageViewModel.verifyAdvancedOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.VerifyAdvancedOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.AdvancedOTPPageViewModel.VerifyAdvancedOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.AdvancedOTPPageViewModel.VerifyAdvancedOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.HomePageViewModel.smartOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.HomePageViewModel.SmartOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.HomePageViewModel.SmartOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.HomePageViewModel.SmartOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.HomePageViewModel.advanceOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.HomePageViewModel.AdvanceOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.HomePageViewModel.AdvanceOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.HomePageViewModel.AdvanceOTP"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.OpenEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.SmartOTPPageViewModel.openEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.OffEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.SmartOTPPageViewModel.offEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.Otp">
            <inheritdoc cref="F:JKeyApp.ViewModels.SmartOTPPageViewModel.otp"/>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.OtpCode">
            <inheritdoc cref="F:JKeyApp.ViewModels.SmartOTPPageViewModel.otpCode"/>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.Time">
            <inheritdoc cref="F:JKeyApp.ViewModels.SmartOTPPageViewModel.time"/>
        </member>
        <member name="F:JKeyApp.ViewModels.SmartOTPPageViewModel.copyOtpCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.SmartOTPPageViewModel.CopyOtpCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.CopyOtpCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.SmartOTPPageViewModel.CopyOtp"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.SmartOTPPageViewModel.registerCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.SmartOTPPageViewModel.RegisterCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.RegisterCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.SmartOTPPageViewModel.Register"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.SmartOTPPageViewModel.scanQRCodeCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.SmartOTPPageViewModel.ScanQRCodeCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.ScanQRCodeCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.SmartOTPPageViewModel.ScanQRCode"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.SmartOTPPageViewModel.unRegisterCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.SmartOTPPageViewModel.UnRegisterCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.SmartOTPPageViewModel.UnRegisterCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.SmartOTPPageViewModel.UnRegister"/>.</summary>
        </member>
        <member name="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.Register">
            <summary>
            register Smart OTP
            </summary>
        </member>
        <member name="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterAdvancedOTP">
            <summary>
            Register advanced OTP
            </summary>
        </member>
        <member name="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.VerifyFirstOTP(System.String,System.String)">
            <summary>
            verify OTP when register
            </summary>
            <param name="email"></param>
            <param name="otpCode"></param>
            <returns></returns>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.OpenEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.openEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.OffEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.offEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.OpenAdvancedEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.openAdvancedEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.OffAdvancedEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.offAdvancedEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.Email">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.email"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.OtpCode">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.otpCode"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.Time">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.time"/>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.sendOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.registerCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.Register"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.sendOTPAdvanceCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTPAdvanceCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTPAdvanceCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.SendOTPAdvance"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.registerAdvancedOTPCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterAdvancedOTPCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterAdvancedOTPCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.RegisterAdvancedOTP"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.backCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.Back"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.backEmailCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmailCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmailCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmail"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.backAdvancedCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackAdvancedCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackAdvancedCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackAdvanced"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyOTPPageViewModel.backEmailAdvancedCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmailAdvancedCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmailAdvancedCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyOTPPageViewModel.BackEmailAdvanced"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.OpenEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.openEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.OffEmail">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.offEmail"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.Camera">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.camera"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.CameraOff">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.cameraOff"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.OtpCode">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.otpCode"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.Email">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.email"/>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.Status">
            <inheritdoc cref="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.status"/>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.registerQRCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQRCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQRCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQR"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.registerQRAdvancedCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQRAdvancedCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQRAdvancedCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.RegisterQRAdvanced"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.backCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.Back"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.backEmailCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmailCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmailCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmail"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.backAdvancedCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackAdvancedCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackAdvancedCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackAdvanced"/>.</summary>
        </member>
        <member name="F:JKeyApp.ViewModels.VerifyScanQRPageViewModel.backEmailAdvancedCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmailAdvancedCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmailAdvancedCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IAsyncRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModels.VerifyScanQRPageViewModel.BackEmailAdvanced"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.IsBusy">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.isBusy"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.IsEnabled">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.isEnabled"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.Title">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel._title"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.VisibleView">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.visibleView"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.VisibleButton">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.visibleButton"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.VisibleAdvancedView">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.visibleAdvancedView"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.VisibleAdvancedButton">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.visibleAdvancedButton"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.Ts">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.ts"/>
        </member>
        <member name="P:JKeyApp.ViewModel.BaseViewModel.TsAd">
            <inheritdoc cref="F:JKeyApp.ViewModel.BaseViewModel.tsAd"/>
        </member>
        <member name="P:JKeyApp.ViewModel.LoginPageViewModel.Username">
            <inheritdoc cref="F:JKeyApp.ViewModel.LoginPageViewModel._username"/>
        </member>
        <member name="P:JKeyApp.ViewModel.LoginPageViewModel.Password">
            <inheritdoc cref="F:JKeyApp.ViewModel.LoginPageViewModel._password"/>
        </member>
        <member name="F:JKeyApp.ViewModel.LoginPageViewModel.loginCommand">
            <summary>The backing field for <see cref="P:JKeyApp.ViewModel.LoginPageViewModel.LoginCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.ViewModel.LoginPageViewModel.LoginCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.ViewModel.LoginPageViewModel.Login"/>.</summary>
        </member>
        <member name="F:JKeyApp.SettingPageViewModel.signOutCommand">
            <summary>The backing field for <see cref="P:JKeyApp.SettingPageViewModel.SignOutCommand"/>.</summary>
        </member>
        <member name="P:JKeyApp.SettingPageViewModel.SignOutCommand">
            <summary>Gets an <see cref="T:CommunityToolkit.Mvvm.Input.IRelayCommand"/> instance wrapping <see cref="M:JKeyApp.SettingPageViewModel.SignOut"/>.</summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Button.TextColorTo(Microsoft.Maui.Controls.Button,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_DatePicker.TextColorTo(Microsoft.Maui.Controls.DatePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Editor.TextColorTo(Microsoft.Maui.Controls.Editor,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Entry.TextColorTo(Microsoft.Maui.Controls.Entry,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Label.TextColorTo(Microsoft.Maui.Controls.Label,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Picker.TextColorTo(Microsoft.Maui.Controls.Picker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_RadioButton.TextColorTo(Microsoft.Maui.Controls.RadioButton,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_SearchBar.TextColorTo(Microsoft.Maui.Controls.SearchBar,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_TimePicker.TextColorTo(Microsoft.Maui.Controls.TimePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
    </members>
</doc>
